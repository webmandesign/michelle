/* FILE: blocks/_columns.scss */

.wp-block-column {
	@if not variable-exists( 'selector_editor_wrapper' ) {
		@extend %clearfix;
	}

	&s {

		&.wp-block-columns:not(.has-background) {
			margin-bottom: 0;
		}

		&.alignfull {
			padding-left: var(--block_padding);
			padding-right: var(--block_padding);
		}

		&.has-background {
			padding: $ratio +em;
			padding-bottom: 0;

			@include media( map_get( $breakpoint, 'xl' ) ) {
				padding: 4%;
				padding-bottom: calc( 4% - #{ $ratio +em } );
			}

		}

	}

	&.wp-block-column:only-child {
		// With single column we can control content width, so we need to center align the column!
		margin-left: auto;
		margin-right: auto;

		&.alignleft,
		&.is-style-alignleft,
		&.alignright,
		&.is-style-alignright {
			float: none;
		}

		&.alignleft,
		&.is-style-alignleft {
			margin-left: 0;
		}

		&.alignright,
		&.is-style-alignright {
			margin-right: 0;
		}

	}

	&.wp-block-column {

		&.wp-block-column:last-child {
			margin-bottom: var(--wp--style--block-gap);
		}

		&.is-style-no-margin-vertical:last-child {
			margin-bottom: 0;
		}

	}

	&s.is-style-no-gaps {
		padding: 0;

		> .wp-block-column.wp-block-column {
			margin: 0;
		}

	}

	&.is-style-no-margin-vertical:last-child {
		margin-bottom: 0;
	}

	&s.is-style-no-margin-vertical > .wp-block-column {

		@include media(
			( 600, 'min-width' ),
			( 781, 'max-width' )
		) {
			// All columns have 50% width here, so we have to be smart:
			&:last-child,                     // Always the last column.
			&:nth-child(1):nth-last-child(2), // 1st column in 2 columns layout.
			&:nth-child(3):nth-last-child(2), // 3rd column in 4 columns layout.
			&:nth-child(5):nth-last-child(2)  // 5th column in 6 columns layout.
			{
				margin-bottom: 0;
			}
		}

		@include media( 782 ) {
			margin-bottom: 0;
		}

	}

	&.is-style-hidden-on-tablet {
		@media (min-width: 600px) and (max-width: 781px) {

			~ .wp-block-column.wp-block-column {
				margin-#{$left}: 0;

				&:nth-child(odd) {
					margin-#{$left}: var(--wp--style--block-gap);
				}

			}

		}
	}

	&[style*="flex-basis"] {
		flex-grow: 0;
	}

	&.wp-block-column:empty {

		&,
		&:last-child {
			margin-bottom: 0;
		}

	}

	hr {
		@if variable-exists( 'selector_editor_wrapper' ) {
			max-width: none !important;
		} @else {
			max-width: none;
		}
	}

	&,
	&s {

		&.is-style-drop-shadow,
		&.is-style-inner-shadow {
			padding: $ratio +em;
		}

	}

}

// Column gaps:

	$prepend : '';
	@if variable-exists( 'selector_editor_wrapper' ) {
		$prepend : '.block-editor-block-list__block';
	}

	@media (min-width: 600px) {
		#{ $prepend }.wp-block-column:nth-child(even) {
			margin-#{$left}: var(--wp--style--block-gap);
		}
	}
	@media (min-width: 600px) and (max-width: 781px) {
		#{ $prepend }.wp-block-column:not(:only-child) {
			flex-basis: calc( 50% - var(--wp--style--block-gap) / 2 ) !important;
		}
	}
	@media (min-width: 782px) {
		#{ $prepend }.wp-block-column:not(:first-child) {
			margin-#{$left}: var(--wp--style--block-gap);
		}
	}
