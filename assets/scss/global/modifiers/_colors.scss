/* FILE: global/modifiers/_colors.scss */

// Color classes

	$specificity : ':root [class]';

	@if variable-exists( 'selector_editor_wrapper' ) {
		$specificity : '[class]';
	}

	@each $option, $value in $customize_options {
		@if str-index( #{ $option }, 'color_' ) or str-index( #{ $option }, 'palette_' ) {
			$selector: str_replace( 'color_', '', $option );
			$selector: str_replace( '_', '-', $selector );

			#{ $specificity }.has-#{ $selector }-color {

				&,
				&:hover,
				&:focus,
				&:active,
				&:visited {
					color: var(--#{ $option });
				}

			}

			#{ $specificity }.has-#{ $selector }-background-color {
				background-color: var(--#{ $option });
			}

			#{ $specificity }.has-#{ $selector }-border-color {
				border-color: var(--#{ $option });
			}
		}
	}

// Has background

	$important_modifiers: important( 'modifier_has_background' );

	.has-background.has-background {
		// Need to use absolute units due to possible
		// custom font size set on the paragraph block.
		padding: calc( var(--typography_font_size_base) * #{ $ratio } ) $important_modifiers; // Simulating rem unit for block editor.

		@include media( ( map_get( $breakpoint, 'm' ), 'max-width' ) ) {
			padding-left: 6vw $important_modifiers;
			padding-right: 6vw $important_modifiers;
		}

	}

	$important_modifiers: null; // Required reset.

// Force link color inheritance

	.has-text-color a {
		color: inherit;
	}

	.link-color-inherit a,
	.has-inherit-link-color a,
	a.link-color-inherit
	a.has-inherit-link-color {

		.site & {
			color: inherit;
		}

	}
