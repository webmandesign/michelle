/* FILE: _extend.scss */
//
// Global extenders.
//

// Accessibility.

	%screen_reader_hiding {
		@include screen_reader_hiding();
	}

// Background.

	%shaded_background {
		z-index: 1; // Trick to keep pseudo element below child elements.

		&::before {
			content: '';
			position: absolute;
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
			background-color: currentColor;
			border-radius: inherit;
			opacity: var(--pseudo_background_opacity);
			z-index: -1; // Trick to keep pseudo element below child elements.
		}

	}

// Loop.

	// Post list columns.

		%posts_list_columns_1 {
			width: calc( #{ percentage( 1 / 1 ) } - var(--posts_list_gap) );
		}

		%posts_list_columns_2 {
			@include media( map_get( $breakpoint, 'm' ) ) {
				width: calc( #{ percentage( 1 / 2 ) } - var(--posts_list_gap) );
			}
		}

		%posts_list_columns_3 {
			@include media( map_get( $breakpoint, 'm' ) ) {
				width: calc( #{ percentage( 1 / 2 ) } - var(--posts_list_gap) );
			}
			@include media(
				( map_get( $breakpoint, 'm' ), 'min-width' ),
				( map_get( $breakpoint, 'l' ), 'max-width' )
			) {
				&:nth-last-child( 1 ):nth-child( 2n - 1 ) {
					margin-left: auto;
					margin-right: auto;
				}
			}

			@include media( map_get( $breakpoint, 'l' ) ) {
				width: calc( #{ percentage( 1 / 3 ) } - var(--posts_list_gap) );
			}
		}

		%posts_list_columns_4 {
			@include media( map_get( $breakpoint, 'm' ) ) {
				width: calc( #{ percentage( 1 / 2 ) } - var(--posts_list_gap) );
			}

			@include media( map_get( $breakpoint, 'l' ) ) {
				width: calc( #{ percentage( 1 / 4 ) } - var(--posts_list_gap) );
			}
		}

		%posts_list_columns_5 {
			@include media( map_get( $breakpoint, 'm' ) ) {
				width: calc( #{ percentage( 1 / 2 ) } - var(--posts_list_gap) );
			}
			@include media(
				( map_get( $breakpoint, 'm' ), 'min-width' ),
				( map_get( $breakpoint, 'l' ), 'max-width' )
			) {
				&:nth-last-child( 1 ):nth-child( 2n - 1 ) {
					margin-left: auto;
					margin-right: auto;
				}
			}

			@include media( map_get( $breakpoint, 'l' ) ) {
				width: calc( #{ percentage( 1 / 3 ) } - var(--posts_list_gap) );
			}
			@include media(
				( map_get( $breakpoint, 'l' ), 'min-width' ),
				( map_get( $breakpoint, 'xl' ), 'max-width' )
			) {
				// @link  https://jsfiddle.net/Lbjwqo38/
				&:nth-last-child( 2 ):nth-child( 5n - 1 ):nth-child( 3n + 1 ) {
					margin-#{$left}: auto;
				}
				&:nth-last-child( 1 ):nth-child( 5n ):nth-child( 3n + 2 ) {
					margin-#{$right}: auto;
				}
				&:nth-last-child( 1 ):nth-child( 5n ):nth-child( 3n ) {
					margin-left: auto;
					margin-right: auto;
				}
			}

			@include media( map_get( $breakpoint, 'xl' ) ) {
				width: calc( #{ percentage( 1 / 5 ) } - var(--posts_list_gap) );
			}
		}

		%posts_list_columns_6 {
			@include media( map_get( $breakpoint, 'm' ) ) {
				width: calc( #{ percentage( 1 / 2 ) } - var(--posts_list_gap) );
			}

			@include media( map_get( $breakpoint, 'l' ) ) {
				width: calc( #{ percentage( 1 / 3 ) } - var(--posts_list_gap) );
			}

			@include media( map_get( $breakpoint, 'xl' ) ) {
				width: calc( #{ percentage( 1 / 6 ) } - var(--posts_list_gap) );
			}
		}

// Widgets.

	%widget_calendar {
		text-align: inherit;

		caption {
			font-size: var(--typography_font_size_small);
			font-weight: 700;
			font-style: normal;
			text-transform: uppercase;
			letter-spacing: var(--letter_spacing);
			caption-side: top;
		}

		table {
			margin: 0;
			font-family: inherit;
			text-align: center;
			border-collapse: separate;
			border-width: 0;

			caption {
				color: inherit;
			}

		}

		tr {

			th,
			td {
				width: auto;
				height: 2em;
				padding: 0;
				text-align: center;
				vertical-align: middle;
			}

		}

		thead {

			th {
				font-size: var(--typography_font_size_small);
				font-weight: 700;
				background: var(--color_body_headings);
				color: var(--background_color);
				border-width: 0;
			}

		}

		tbody {

			a {
				display: block;
				width: 100%;
				height: 100%;
				text-decoration: none;
				line-height: 2;
				background: var(--color_button_background);
				color: var(--color_button_text);
				transition: background .3s;

				&:focus {
					outline-color: var(--color_accent);
				}

			}

		}

		tfoot {

			a {
				color: inherit;
			}

		}

		.pad {
			visibility: hidden;
		}

		.wp-calendar-nav {
			margin-top: .5em;
			font-size: var(--typography_font_size_small);
			font-weight: 700;
			text-align: inherit;
			text-transform: uppercase;
			letter-spacing: var(--letter_spacing);

			a {
				text-decoration: none;

				&:hover,
				&:focus {
					text-decoration: underline;
				}

			}

		}

	}

	%widget_list_items {
		margin: 0;
		list-style: none;

		ul {
			margin-#{$left}: .5em;
			margin-top: .25em;
			margin-bottom: -.25em;
			list-style: inherit; // This is required in case the parent was set with a class (such as categories block).
		}

		li {
			padding: .25em 0;

			&::before {
				content: '\2014'; // &mdash;
				margin-#{$right}: .25em;
				speak: none;
			}

		}

		a {
			text-decoration: none;

			&:hover,
			&:focus {
				text-decoration: underline;
			}

		}

	}
